// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model File {
  id           Int      @id @default(autoincrement())
  filename     String   @db.VarChar(255) // 文件名
  originalName String   @db.VarChar(255) // 原始文件名
  size         Int // 文件大小(kb)
  type         String   @db.VarChar(32) // 文件类型
  url          String   @db.VarChar(255) // 文件访问地址
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model User {
  id        Int      @id @default(autoincrement())
  account   String   @unique @db.VarChar(32)
  password  String   @db.VarChar(32)
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  blogs     Blog[]
}

model Category {
  id          Int      @id @default(autoincrement())
  name        String   @unique @db.VarChar(32)
  cover       String?  @db.VarChar(255)
  desc        String?  @db.VarChar(255)
  type        Int      @default(1) // 1:文章分类 2:友链分类
  sort        Int      @default(1)
  firstBlogId Int? // 第一篇文章id
  blogs       Blog[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum EditorType {
  markdown
  richText
}

enum BlogType {
  original // 原创
  reprint // 转载
}

model Blog {
  id              String     @id @default(uuid()) // 文章id
  title           String     @db.VarChar(32) // 文章标题
  desc            String     @default("") @db.VarChar(255) // 文章描述
  content         String?    @db.Text // 文章内容
  contentHtml     String?    @db.Text // 文章内容html
  editorType      EditorType @default(markdown) // 编辑器类型
  cover           String?    @db.VarChar(255) // 文章封面
  tags            Json       @db.Json // 文章标签，
  blogType        BlogType   @default(original) // 文章类型
  viewCount       Int        @default(0) // 文章浏览量
  likeCount       Int        @default(0) // 文章点赞量
  commentCount    Int        @default(0) // 文章评论量
  isComment       Boolean    @default(true) // 是否允许评论
  isTop           Boolean    @default(false) // 是否置顶
  isDraft         Boolean    @default(true) // 是否草稿
  isPublic        Boolean    @default(true) // 是否公开
  originalAddress String?    @db.VarChar(255) // 原始地址
  allowComment    Boolean    @default(true) // 是否允许评论
  categoryId      Int
  category        Category   @relation(fields: [categoryId], references: [id])
  userId          Int
  user            User       @relation(fields: [userId], references: [id])
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
}
